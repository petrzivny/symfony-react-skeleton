on:
  workflow_call:

jobs:
  lint:
    runs-on: self-hosted
    name: Lints&Install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # disable shallow checkout to prevent ct to "failed identifying charts to process"
          fetch-depth: "0"

      - name: helm lint
        run: |
          env
          cd .deploy/helm && helm lint --strict --with-subcharts

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (lint)
        run: ct lint --all --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy

      - name: List changed charts
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.4.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kind load docker-image ${{ vars.REGISTRY_NAME }}/symfony-react-skeleton/php:latest --name chart-testing
          kind load docker-image europe-west1-docker.pkg.dev/basic-388908/totea-symfony-react-skeleton-ar/symfony-react-skeleton/php:latest --name chart-testing
          kind load docker-image europe-west1-docker.pkg.dev/basic-388908/totea-symfony-react-skeleton-ar/symfony-react-skeleton/nginx:latest --name chart-testing
          ct install --all --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy --helm-extra-args "--timeout 1m" --helm-extra-set-args "--set=fetch_external_secrets_in_post_deploy_script=false,image.imagePullPolicy=Never"
        # You can also use: helm upgrade --install symfony-react-skeleton .deploy/helm --wait --create-namespace --timeout 1m --set fetch_external_secrets_in_post_deploy_script=false

      - name: Debug On Failure
        if: failure()
        run: |
          kubectl version --client -o yaml
          echo "=== GET ALL ==="
          kubectl -n chart-testing get all
          kubectl -n default get all
          echo "=== DESCRIBE PODS ==="
          kubectl -n chart-testing describe pods
          kubectl -n default describe pods
          echo "=== GET DEPLOY ==="
          kubectl -n chart-testing get deploy
          echo "=== LOGS ==="
          kubectl -n chart-testing logs -l app=workboard-teams-management
          echo "=== PREVIOUS LOGS ==="
          kubectl -n chart-testing logs -l app=workboard-teams-management --previous
