on:
  workflow_call:

jobs:
  lint:
    runs-on: self-hosted
    name: Lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: helm lint
        run: |
          cd .deploy && helm lint --strict --with-subcharts

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (lint)
        run: ct lint --all --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy --check-version-increment false

      - name: List changed charts
        id: list-changed
        run: |
          echo "changed=true" >> "$GITHUB_OUTPUT"
          ct list-changed --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy)
      #          if [[ -n "$changed" ]]; then
#          fi

      - name: Store old kubectl default context
        if: steps.list-changed.outputs.changed == 'true'
        id: old-context
        run: |
          context=$(kubectl config current-context)
          echo "context=$context" >> "$GITHUB_OUTPUT"

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.4.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --all --target-branch ${{ github.event.repository.default_branch }} --chart-dirs .deploy

      - name: Restore old kubectl default context
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl config use-context ${{ steps.old-context.outputs.context }}

      - name: Debug On Failure
        if: failure()
        run: |
          kubectl version --client -o yaml
          echo "=== GET ALL ==="
          kubectl -n chart-testing get all
          echo "=== DESCRIBE PODS ==="
          kubectl -n chart-testing describe pods
          echo "=== GET DEPLOY ==="
          kubectl -n chart-testing get deploy
          echo "=== LOGS ==="
          kubectl -n chart-testing logs -l app=workboard-teams-management
          echo "=== PREVIOUS LOGS ==="
          kubectl -n chart-testing logs -l app=workboard-teams-management --previous
